<Project>

  <!-- TODO: Move this file (implementing source-build targets) to Arcade. -->

  <!--
    These targets inject source-build into Arcade's build process.
  -->

  <PropertyGroup>
    <SourceBuildOutputDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsDir)', 'source-build'))</SourceBuildOutputDir>
    <SourceBuildSelfDir>$([MSBuild]::NormalizeDirectory('$(SourceBuildOutputDir)', 'self'))</SourceBuildSelfDir>
    <CurrentRepoSourceBuildArtifactsDir>$([MSBuild]::NormalizeDirectory('$(SourceBuildSelfDir)', 'artifacts'))</CurrentRepoSourceBuildArtifactsDir>
    <CurrentRepoSourceBuildSourceDir>$([MSBuild]::NormalizeDirectory('$(SourceBuildSelfDir)', 'src'))</CurrentRepoSourceBuildSourceDir>
    <CurrentRepoSourceBuildPackageCache>$([MSBuild]::NormalizeDirectory('$(SourceBuildSelfDir)', 'package-cache'))</CurrentRepoSourceBuildPackageCache>

    <CurrentRepoSourceBuildArtifactsPackagesDir>$([MSBuild]::NormalizeDirectory('$(CurrentRepoSourceBuildArtifactsDir)', 'packages', '$(Configuration)'))</CurrentRepoSourceBuildArtifactsPackagesDir>
    <CurrentRepoSourceBuildBinlogFile>$([MSBuild]::NormalizePath('$(CurrentRepoSourceBuildArtifactsDir)', 'sourcebuild.binlog'))</CurrentRepoSourceBuildBinlogFile>

    <InnerSourceBuildRepoRoot Condition="'$(InnerSourceBuildRepoRoot)' == ''">$(CurrentRepoSourceBuildSourceDir)</InnerSourceBuildRepoRoot>

    <CleanInnerSourceBuildRepoRoot Condition="'$(CleanInnerSourceBuildRepoRoot)' == ''">true</CleanInnerSourceBuildRepoRoot>
  </PropertyGroup>

  <PropertyGroup>
    <SourceBuildEngineeringDir>$([MSBuild]::NormalizeDirectory('$(RepositoryEngineeringDir)', 'source-build'))</SourceBuildEngineeringDir>
    <LocalNuGetPackagesRoot>$(CurrentRepoSourceBuildPackageCache)</LocalNuGetPackagesRoot>

    <ToolsLocalDir>$(SourceBuildEngineeringDir)tools-local/</ToolsLocalDir>
    <TaskDir>$(ToolsLocalDir)tasks/</TaskDir>
    <XPlatTasksBinDir>$(TaskDir)Microsoft.DotNet.SourceBuild.Tasks.XPlat/bin/$(Configuration)/netstandard2.0/</XPlatTasksBinDir>
    <XPlatSourceBuildTasksAssembly>$(XPlatTasksBinDir)Microsoft.DotNet.SourceBuild.Tasks.XPlat.dll</XPlatSourceBuildTasksAssembly>

    <DotNetCliToolDir>$([MSBuild]::NormalizeDirectory('$(DotNetRoot)'))</DotNetCliToolDir>
  </PropertyGroup>

  <Target Name="ExecuteWithSourceBuiltTooling"
          DependsOnTargets="
            BuildUpstreamRepos;
            GetSourceBuildCommandConfiguration;
            ExecuteInnerSourceBuild;
            PackSourceBuildIntermediateNupkg;
            PackSourceBuildTarball"
          Condition="
            '$(FromSource)' == 'true' and
            '$(InnerBuildFromSource)' != 'true'"
          BeforeTargets="Execute" />

  <Target Name="BuildUpstreamRepos"
          Condition="'$(BuildUpstreamRepos)' == 'true'">
    <ItemGroup>
      <RepositoryReference Include="aspnetcore" />
      <RepositoryReference Include="newtonsoft-json" />
      <RepositoryReference Include="newtonsoft-json901" />
      <RepositoryReference Include="toolset" />
    </ItemGroup>

    <MSBuild
      Projects="$(SourceBuildEngineeringDir)build.proj"
      Targets="PrepareOutput;InitBuild"
      Properties="RepoRoot=$(RepoRoot)" />

    <MSBuild
      Projects="@(RepositoryReference -> '$(SourceBuildEngineeringDir)repos\%(Identity).proj')"
      Properties="RepoRoot=$(RepoRoot)"
      StopOnFirstFailure="true" />
  </Target>

  <!--
    Separate target to execute to provide easy hook point for BeforeTargets that will only trigger
    when the inner build is actually happening. Hooking BeforeTargets on
    ExecuteWithSourceBuiltTooling runs unconditionally, for example, inside the core-sdk build.
  -->
  <Target Name="ExecuteInnerSourceBuild">
    <PropertyGroup>
      <PreventPrebuiltBuild>true</PreventPrebuiltBuild>
      <InnerBuildArgs>$(InnerBuildArgs) /p:InnerBuildFromSource=true</InnerBuildArgs>
    </PropertyGroup>

    <Exec
      Condition="'$(ExecuteInnerSourceBuild)' != 'false'"
      Command="$(REPO_BUILD_TOOL_COMMAND) $(InnerBuildArgs)"
      WorkingDirectory="$(ProjectDirectory)"
      EnvironmentVariables="@(InnerBuildEnv)"
      IgnoreStandardErrorWarningFormat="true" />
  </Target>

  <!--
    TODO: Combine with SBRP work. Included here to make merge conflict resolution in the
    DependsOnTargets more obvious.
  -->
  <Target Name="PackSourceBuildIntermediateNupkg" />

  <Target Name="PreventPrebuiltBuild"
          DependsOnTargets="ExecuteWithSourceBuiltTooling"
          Condition="'$(PreventPrebuiltBuild)' == 'true'"
          BeforeTargets="Execute">
    <ItemGroup>
      <ProjectToBuild Remove="@(ProjectToBuild)" />
      <ProjectToBuild Include="$(MSBuildThisFileDirectory)Noop.proj" />
    </ItemGroup>
  </Target>

</Project>
