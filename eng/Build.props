<Project>

  <Import Project="SourceBuild.targets" />

  <Target Name="BuildUpstreamRepos"
          Condition="
            '$(FromSource)' == 'true' and
            '$(InnerBuildFromSource)' != 'true' and
            '$(BuildUpstreamRepos)' == 'true'"
          BeforeTargets="Execute">
    <ItemGroup>
      <RepositoryReference Include="aspnetcore" />
      <RepositoryReference Include="newtonsoft-json" />
      <RepositoryReference Include="newtonsoft-json901" />
      <RepositoryReference Include="toolset" />
    </ItemGroup>

    <MSBuild
      Projects="$(RepoRoot)eng\source-build\build.proj"
      Targets="PrepareOutput;InitBuild"
      Properties="RepoRoot=$(RepoRoot)" />

    <MSBuild
      Projects="@(RepositoryReference -> '$(RepoRoot)eng\source-build\repos\%(Identity).proj')"
      Properties="RepoRoot=$(RepoRoot)"
      StopOnFirstFailure="true" />
  </Target>

  <Target Name="ExecuteWithSourceBuiltTooling"
          DependsOnTargets="
            BuildUpstreamRepos;
            GetSourceBuildCommandConfiguration"
          Condition="
            '$(FromSource)' == 'true' and
            '$(InnerBuildFromSource)' != 'true'"
          BeforeTargets="Execute">
    <PropertyGroup>
      <PreventPrebuiltBuild>true</PreventPrebuiltBuild>
    </PropertyGroup>

    <!-- TODO: (source-build) Use a recursive build like below with additional lightweight args, not full proj. -->
    <Exec Command="$(REPO_BUILD_TOOL_COMMAND) $(InnerBuildArgs)" />
  </Target>

  <Target Name="PreventPrebuiltBuild"
          DependsOnTargets="ExecuteWithSourceBuiltTooling"
          Condition="'$(PreventPrebuiltBuild)' == 'true'"
          BeforeTargets="Execute">
    <ItemGroup>
      <ProjectToBuild Remove="@(ProjectToBuild)" />
      <ProjectToBuild Include="$(MSBuildThisFileDirectory)No.proj" />
    </ItemGroup>
  </Target>

</Project>
